# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: mini_bootcamp_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://postgres:postgres@localhost:5432/mini_bootcamp_test"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: bundle-${{ hashFiles('**/Gemfile.lock') }}
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: yarn-${{ hashFiles('**/yarn.lock') }}
      # Add or replace dependency steps here
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.2
      - name: Setup Node
        uses: actions/setup-node@v3.0.0
      - name: install yarn
        run: npm install -g yarn
      - name: yarn install
        run: yarn install
      - name: bundle install
        run: |
          bundle config path "vendor/bundle"
          bundle install
      - name: Set up database
        run: |
          bundle exec rails db:create
          bundle exec rails db:migrate
      # Add or replace test runners here
      - name: Run tests
        run: bundle exec rspec
